name: Tests, linting, etc.
on:
  push:
    branches:
      - "main"
      - "feature/*"
      - "hotfix/*"
      - "release/*"
  pull_request:

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Snaps
        id: cache-snaps
        uses: actions/cache@v4
        with:
          path: /var/lib/snapd/snaps
          key: ${{ runner.os }}-snaps
      - name: Begin async installations
        run: |
          sudo snap install --no-wait --classic pyright
          sudo snap install --no-wait shellcheck
          sudo snap install --no-wait --classic --beta astral-uv
          sudo snap install --no-wait ruff
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure environment
        run: |
          echo "::group::Wait for snap to complete"
          snap watch --last=install
          echo "::endgroup::"
          sudo snap alias astral-uv.uv uv
      - name: Run Linters
        run: |
          make lint
  tests:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13-dev"
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Cache Snaps
        id: cache-snaps
        uses: actions/cache@v4
        with:
          path: /var/lib/snapd/snaps
          key: ${{ runner.os }}-snaps
        if: ${{ matrix.platform == 'ubuntu-latest' }}
      - name: Begin async install
        run: |
          sudo snap install --no-wait --classic --beta astral-uv
        if: ${{ matrix.platform == 'ubuntu-latest' }}
      - name: Install uv
        run: |
          pipx install uv
        if: ${{ matrix.platform != 'ubuntu-latest' }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python }} on ${{ matrix.platform }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Complete install
        run: |
          snap watch --last=install
          sudo snap alias astral-uv.uv uv
        if: ${{ matrix.platform == 'ubuntu-latest' }}
      - name: Test
        run: |
          make test-oldest
          make test
        env:
          PYTEST_ADDOPTS: "--no-header -vv -rN"
      - name: Upload code coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./results/
          files: coverage*.xml
      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.platform }}
          path: results/
