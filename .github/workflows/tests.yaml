name: Tests, linting, etc.
on:
  push:
    branches:
      - "main"
      - "feature/*"
      - "hotfix/*"
      - "release/*"
  pull_request:
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Begin async installations
        id: install
        run: |
          pyright_change="$(sudo snap install --no-wait --classic pyright)"
          shellcheck_change="$(sudo snap install --no-wait shellcheck)"
          uv_change="$(sudo snap install --no-wait --classic astral-uv)"
          ruff_change="$(sudo snap install --no-wait ruff)"
          echo snap_changes="$pyright_change $shellcheck_change $uv_change $ruff_change" >> "$GITHUB_OUTPUT"
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Configure environment
        run: |
          echo "::group::Wait for snap to complete"
            for change in ${{ steps.install.outputs.snap_changes }}; do
              snap watch $change
            done
          echo "::endgroup::"
      - name: Run Linters
        run: |
          make lint
  tests:
    strategy:
      matrix:
        platform: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, windows-latest]
        python:
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
          - 3.12
          - 3.13
          - 3.14
          - 3.14+freethreaded
          - pypy3.8
          - pypy3.9
          - pypy3.10
          - pypy3.11
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
      - name: Install test dependencies
        run: |
          make install-test-deps
      - name: Test across all Python versions
        shell: bash
        run: |
          # shellcheck disable=SC2086
          make test UV_PYTHON=${{ matrix.python }}
        env:
          PYTEST_ADDOPTS: "--no-header -vv -rN"
      - name: Test with the lowest supported libraries
        shell: bash
        run: |
          # shellcheck disable=SC2086
          make test UV_PYTHON=${{ matrix.python }} UV_RESOLUTION=lowest
      - name: Upload code coverage
        uses: codecov/codecov-action@v5
        with:
          directory: ./results/
          files: coverage*.xml
      - name: Upload test results
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.platform }}
          path: results/
